//@ts-nocheck

import ClientFooter from '@/shared/components/clientFooter'
import ClientHeader from '@/shared/components/clientHeader'
import {
  getBasket,
  postBasket,
  deleteBasket,
  clearBasket,
} from '@/shared/services/basket'
import {
  getRestuarantById,
  getRestuarants,
} from '@/shared/services/restaurants'
import { Product } from '@/shared/types/admin'
import { Box, Heading, Text, useToast } from '@chakra-ui/react'
import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query'
import { serverSideTranslations } from 'next-i18next/serverSideTranslations'
import Head from 'next/head'
import Image from 'next/image'
import { useRouter } from 'next/router'
import React, { useState } from 'react'
import { useTranslation } from 'react-i18next'

function RestaurantId() {
  const { t } = useTranslation()
  const { push, query } = useRouter()
  const toast = useToast()

  const queryClient = useQueryClient()

  const { data: restaurant } = useQuery({
    queryFn: () => getRestuarantById(query.restaurant_id as string),
    queryKey: ['restuarant'],
  })
  const [inBasket, setInBasket] = useState(true)

  const { data: basket } = useQuery({
    queryFn: () => getBasket(),
    queryKey: ['basket'],
  })

  const { mutate: clear } = useMutation({
    mutationFn: (data) => clearBasket(data),
    queryKey: ['basket'],
    onSuccess(data, variables, context) {
      console.log(data, 'success')
      toast({
        title: 'Item cleared',
        status: 'success',
        duration: 3000,
        isClosable: true,
      })
    },
    onSettled: () => {
      queryClient.invalidateQueries({ queryKey: ['basket'] })
    },
  })

  function handleBasketClear(id: string) {
    const newData = { basket_id: id }
    clear(newData)
  }

  const { mutate: delet } = useMutation({
    mutationFn: (data) => deleteBasket(data),
    queryKey: ['basket'],
    onSuccess(data, variables, context) {
      console.log(data, 'success')
      toast({
        title: 'Item deleted',
        status: 'success',
        duration: 3000,
        isClosable: true,
      })
    },
    onSettled: () => {
      queryClient.invalidateQueries({ queryKey: ['basket'] })
    },
  })

  function handleBasketDelete(id: string) {
    const newData = { product_id: id }
    delet(newData)
  }

  const { mutate: add } = useMutation({
    mutationFn: (data) => postBasket(data),
    queryKey: ['basket'],
    onSuccess(data, variables, context) {
      console.log(data, 'success')
      toast({
        title: 'Item added',
        status: 'success',
        duration: 3000,
        isClosable: true,
      })
    },
    onSettled: () => {
      queryClient.invalidateQueries({ queryKey: ['basket'] })
    },
  })

  function handleAddBasket(id: string) {
    console.log('added')
    const newData = { product_id: id }
    add(newData)
  }

  console.log(basket?.data.result, 'basket')

  function handleBasketFilter(id) {
    let newBasket = basket?.data?.result?.data?.items.includes(
      (item) => item?.id === id,
    )
    console.log(newBasket, 'newBasketnewBasketnewBasket')
    setInBasket(newBasket)
  }

  return (
    <div>
      <div>
        <Head>
          <title>Foody | {t('restaurants')}</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <Box className="max-w-[1440px] mx-auto">
          <header>
            <ClientHeader />
          </header>
          <main className="flex mx-8 gap-10">
            <section className="">
              <Box>
                <Box className="w-full h-[448px] border border-red-600 overflow-hidden object-contain">
                  <Image
                    width={1400}
                    height={448}
                    alt="coverimage"
                    src={restaurant?.data?.result?.data?.img_url}
                    className=""
                  />
                </Box>
                <Box className="flex px-8 border border-b-client-rest-grey py-5">
                  <Box className="flex flex-col justify-start w-3/5">
                    <Text className="text-2xl font-bold text">
                      {restaurant?.data?.result?.data?.name}
                    </Text>
                    <Text className="text-client-main-gray1 text-sm">
                      {restaurant?.data?.result?.data?.address}
                    </Text>
                  </Box>
                  <Box className="flex justify-start gap-7 w-2/5">
                    <Box className="text-client-main-gray1">
                      <Text className="text-lg">Cuisine</Text>
                      <Text className="text-sm">
                        {restaurant?.data?.result?.data?.cuisine}
                      </Text>
                    </Box>
                    <Box className="text-sm w-20 h-12 border border-client-main-red text-client-main-red rounded-md ">
                      ${restaurant?.data?.result?.data?.delivery_price} Delivery
                    </Box>
                    <Box
                      className="text-sm w-20 h-12 border bg-client-main-red text-white rounded-md cursor-pointer"
                      onClick={() => push('/restaurants')}
                    >
                      Go Back
                    </Box>
                  </Box>
                </Box>
                <Box className="flex justify-between py-12 px-12">
                  <Box className=" bg-client-fill-gray w-[846px]">
                    <Text className="text-2xl font-bold text-center py-10">
                      Products
                    </Text>
                    <Box>
                      {restaurant?.data?.result?.data?.products?.map(
                        (item: Product, index: number) => {
                          return (
                            <Box
                              key={index}
                              className="flex justify-between align-middle gap-8 py-6 px-8 border-t border-t-client-rest-grey"
                            >
                              <Box className="flex gap-9">
                                <Image
                                  width={57}
                                  height={53}
                                  alt="cover image"
                                  src={item?.img_url}
                                />
                                <Box className="flex flex-col ">
                                  <Text className="text-lg my-auto">
                                    {item?.name}
                                  </Text>
                                  <Text className="text-client-rest-grey text-sm">
                                    {item?.description}
                                  </Text>
                                </Box>
                              </Box>
                              <Box className="flex gap-9 align-middle justify-center">
                                <Box className="flex gap-1.5 align-middle pt-2">
                                  <Text className="text-xs text-client-main-gray1 pt-1.5">
                                    From
                                  </Text>
                                  <Text>${item?.price}</Text>
                                </Box>
                                <Box onClick={() => handleAddBasket(item?.id)}>
                                  <Image
                                    width={40}
                                    height={40}
                                    alt="plus image"
                                    src={`${
                                      inBasket ? '/plusgreen.svg' : '/plus.svg'
                                    }`}
                                    className="cursor-pointer"
                                  />
                                </Box>
                              </Box>
                            </Box>
                          )
                        },
                      )}
                    </Box>
                  </Box>
                  {/* basket */}
                  <Box className="bg-client-fill-gray w-[400px] h-[548px] border border-dashed border-client-rest-grey relative">
                    <Box className="flex p-3 flex-col ">
                      <Box className="flex gap-1.5 pb-4">
                        <Image
                          width={25}
                          height={22}
                          alt="basket"
                          src={`${
                            basket?.data?.result?.data?.items.length == 0
                              ? '/basket.svg'
                              : '/basketRed.svg'
                          }`}
                          className="text-client-rest-grey"
                        />
                        <Text
                          className={`text-${
                            basket?.data?.result?.data?.items.length == 0
                              ? 'client-rest-grey'
                              : 'client-main-red'
                          } font-bold`}
                        >
                          {basket?.data?.result?.data?.items.length} items
                        </Text>
                      </Box>
                      {basket?.data?.result?.data?.items.length == 0 ? (
                        <Box className="w-72 flex flex-col justify-center align-middle m-auto ">
                          <Image
                            width={200}
                            height={200}
                            alt="empty basket"
                            src={'/basketEmpty.svg'}
                            className="mx-auto"
                          />
                          <Text className="text-client-rest-grey1 text-4xl text-center">
                            Opps! Basket empty
                          </Text>
                        </Box>
                      ) : (
                        <Box>
                          {basket?.data?.result?.data?.items.map(
                            (item, index) => {
                              return (
                                <Box className="py-9 border-t-2" key={index}>
                                  <Box className="flex gap-2 relative">
                                    <Image
                                      width={21}
                                      height={17}
                                      alt="delete basket"
                                      src={'/basketDelete.svg'}
                                      className="absolute -top-4 right-1 cursor-pointer"
                                      onClick={() =>
                                        handleBasketClear(
                                          basket?.data?.result?.data?.id,
                                        )
                                      }
                                    />
                                    <Image
                                      width={45}
                                      height={45}
                                      src={`${item.img_url}`}
                                      alt="meal image"
                                      className="object-contain"
                                    />
                                    <Box className="flex flex-col gap-0.5">
                                      <Text>{item.name}</Text>
                                      <Text>${item.price}</Text>
                                    </Box>
                                    <Box className="flex flex-col bg-white rounded-lg h-16 w-7 justify-center text-center align-middle ">
                                      <Box
                                        className="cursor-pointer pt-3"
                                        onClick={() => handleAddBasket(item.id)}
                                      >
                                        +
                                      </Box>
                                      <Box>{item.count}</Box>
                                      <Box
                                        className="cursor-pointer pb-3"
                                        onClick={() =>
                                          handleBasketDelete(item.id)
                                        }
                                      >
                                        --
                                      </Box>
                                    </Box>
                                  </Box>
                                </Box>
                              )
                            },
                          )}
                        </Box>
                      )}
                      {/* checkout */}
                      <Box
                        onClick={() => push('/user?page=checkout')}
                        className={`bg-${
                          basket?.data?.result?.data?.items.length == 0
                            ? 'client-rest-grey1'
                            : 'client-main-red'
                        } w-[372px] mx-auto h-12 rounded-full ps-6 pe-0.5 flex align-middle justify-between absolute bottom-6 left-3  cursor-pointer`}
                      >
                        <Text className="text-white my-auto">Checkout</Text>
                        <Box
                          className={`text-${
                            basket?.data?.result?.data?.items.length == 0
                              ? 'client-rest-grey'
                              : 'client-main-red'
                          } w-32 h-11 bg-white rounded-full my-auto text-center pt-3`}
                        >
                          ${basket?.data?.result?.data?.total_amount}
                        </Box>
                      </Box>
                    </Box>
                  </Box>
                </Box>
              </Box>
            </section>
          </main>
          <ClientFooter />
        </Box>
      </div>
    </div>
  )
}

export default RestaurantId

// export async function getStaticProps({ locale }: { locale: any }) {
//   return {
//     props: { ...(await serverSideTranslations(locale, ['admin'])) },
//   }
// }
